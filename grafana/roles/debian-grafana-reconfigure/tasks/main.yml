############################################################
#
# USAGE:
#   Reconfigure Grafana.
#
# PARAMETERS:
#
# PLAYBOOK EXAMPLE:
#   - hosts: grafana
#     gather_facts: yes
#     vars_files:
#       - group_vars/grafana
#     roles:
#       - role: debian-grafana-reconfigure
#         when: ansible_facts['os_family'] == 'Debian'
#     tags: [ never, grafana-reconfigure ]
#
############################################################

- name: "Download Grafana GPG key for APT..."
  ansible.builtin.get_url:
    url: "{{ grafana_gpg_url }}"
    dest: "{{ grafana_apt_key_dst }}"
    owner: root
    group: root
    mode: u+rw,g+r,o+r
  when: not ansible_use_proxy | bool
  ignore_errors: no

- name: "Download Grafana GPG key for APT (via proxy)..."
  connection: local
  environment:
    http_proxy: "{{ ansible_system_proxy }}"
    https_proxy: "{{ ansible_system_proxy }}"
  ansible.builtin.get_url:
    url: "{{ grafana_gpg_url }}"
    dest: "{{ grafana_apt_key_dst }}"
    owner: root
    group: root
    mode: u+rw,g+r,o+r
  when: ansible_use_proxy | bool and ansible_system_proxy is defined
  ignore_errors: no

- name: "Stop Grafana services..."
  become: yes
  ansible.builtin.service:
    name: grafana-server
    state: stopped
  ignore_errors: yes

- name: "Add Grafana APT repository..."
  become: yes
  ansible.builtin.apt_repository: 
    repo: "{{ grafana_apt_url }}"
    state: present 
    filename: "{{ grafana_apt_sources_file }}"
    update_cache: no
  ignore_errors: no

- name: "Apply Grafana configuration..."
  become: yes
  ansible.builtin.template:
    src: "{{ grafana_config_template }}"
    dest: "{{ grafana_config_dst }}"
    owner: root 
    group: grafana
    backup: true
  ignore_errors: no

- name: "Start Grafana services..."
  become: yes
  ansible.builtin.service:
    name: grafana-server
    state: started
  ignore_errors: no

- name: "Sleep for 10 seconds before checking Grafana availability..."
  ansible.builtin.wait_for:
    timeout: 10
  delegate_to: localhost

- name: "Check if Grafana interface is up and running ?"
  ansible.builtin.uri:
    url: "http://{{ ansible_host }}:{{ grafana_port }}/api/health"
    return_content: true
  register: url_response
  failed_when: url_response is failed
  ignore_errors: no

# - name: "DEBUG..."
#   ansible.builtin.debug: 
#     var=url_response
